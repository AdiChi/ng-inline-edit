/**
 * ng-inline-edit v0.5.3 (http://tamerayd.in/ng-inline-edit)
 * Copyright 2015 Tamer Aydin (http://tamerayd.in)
 * Licensed under MIT
 */
!function(n,i){"use strict";i.module("angularInlineEdit.providers",[]).value("InlineEditConfig",{btnEdit:"Edit",btnSave:"",btnCancel:"",editOnClick:!1,onBlur:null}).constant("InlineEditConstants",{CANCEL:"cancel",SAVE:"save"})}(window,window.angular),function(n,i){"use strict";i.module("angularInlineEdit.controllers",[]).controller("InlineEditController",["$scope","$document","$timeout",function(n,i,e){n.validationError=!1,n.validating=!1,n.isOnBlurBehaviorValid=!1,n.cancelOnBlur=!1,n.editMode=!1,n.inputValue="",n.editText=function(t){n.editMode=!0,n.inputValue="string"==typeof t?t:n.model,e(function(){n.editInput[0].focus(),n.isOnBlurBehaviorValid&&i.bind("click",n.onDocumentClick)},0)},n.applyText=function(t,l){function a(){n.model=r,n.callback({newValue:r}),n.editMode=!1}function d(){n.validationError=!0,e(function(){n.editText(r)},0)}function o(i){n.validating=!1,i&&l&&n.$apply()}var r=n.inputValue;if(n.validationError=!1,t||n.model===r)n.editMode=!1,l&&n.$apply();else{n.validating=!0,l&&n.$apply();var c=n.validate({newValue:n.inputValue});c&&c.then?c.then(a)["catch"](d)["finally"](o):c||"undefined"==typeof c?(a(),o(!0)):(d(),o(!0))}n.isOnBlurBehaviorValid&&i.unbind("click",n.onDocumentClick)},n.onInputKeyup=function(i){if(!n.validating)switch(i.keyCode){case 13:n.applyText(!1,!1);break;case 27:n.applyText(!0,!1)}},n.onDocumentClick=function(i){n.validating||i.target!==n.editInput[0]&&n.applyText(n.cancelOnBlur,!0)}}])}(window,window.angular),function(n,i){"use strict";i.module("angularInlineEdit.directives",["angularInlineEdit.providers","angularInlineEdit.controllers"]).directive("inlineEdit",["$compile","$interpolate","InlineEditConfig","InlineEditConstants",function(n,e,t,l){return{restrict:"A",controller:"InlineEditController",scope:{model:"=inlineEdit",placeholder:"@inlineEditPlaceholder",callback:"&inlineEditCallback",validate:"&inlineEditValidation"},link:function(a,d,o){a.model=a.$parent.$eval(o.inlineEdit),a.placeholder=a.placeholder?e(a.placeholder)(a.$parent):"";var r=o.hasOwnProperty("inlineEditOnBlur")?o.inlineEditOnBlur:t.onBlur;(r===l.CANCEL||r===l.SAVE)&&(a.isOnBlurBehaviorValid=!0,a.cancelOnBlur=r===l.CANCEL);var c=i.element("<div class=\"ng-inline-edit\" ng-class=\"{'ng-inline-edit--validating': validating, 'ng-inline-edit--error': validationError}\">"),u=i.element('<input type="text" class="ng-inline-edit__input" ng-disabled="validating" ng-show="editMode" ng-keyup="onInputKeyup($event)" ng-model="inputValue" placeholder="'+a.placeholder+'" />'),p=i.element('<div class="ng-inline-edit__inner-container"></div>');p.append(i.element('<span class="ng-inline-edit__text" ng-class="{\'ng-inline-edit__text--placeholder\': !model}" '+(o.hasOwnProperty("inlineEditOnClick")||t.editOnClick?'ng-click="editText()" ':"")+'ng-if="!editMode">{{model || placeholder}}</span>'));var s=o.hasOwnProperty("inlineEditBtnEdit")?o.inlineEditBtnEdit:t.btnEdit;s&&p.append(i.element('<a class="ng-inline-edit__button ng-inline-edit__button--edit" ng-if="!editMode" ng-click="editText()">'+s+"</a>"));var g=o.hasOwnProperty("inlineEditBtnSave")?o.inlineEditBtnSave:t.btnSave;g&&p.append(i.element('<a class="ng-inline-edit__button ng-inline-edit__button--save" ng-if="editMode && !validating" ng-click="applyText(false, false)">'+g+"</a>"));var v=o.hasOwnProperty("inlineEditBtnCancel")?o.inlineEditBtnCancel:t.btnCancel;v&&p.append(i.element('<a class="ng-inline-edit__button ng-inline-edit__button--cancel" ng-if="editMode && !validating" ng-click="applyText(true, false)">'+v+"</a>")),c.append(u).append(p),d.append(c),a.editInput=u,o.$observe("inlineEdit",function(i){a.model=a.$parent.$eval(i),n(d.contents())(a)})}}}])}(window,window.angular),function(n,i){"use strict";i.module("angularInlineEdit",["angularInlineEdit.providers","angularInlineEdit.controllers","angularInlineEdit.directives"])}(window,window.angular);